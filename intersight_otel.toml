key_file = "creds/intersight-cgascoig-20200423.pem"
key_id = "59c84e4a16267c0001c23428/59cc595416267c0001a0dfc7/5ea26d577564612d3025b892"
otel_collector_endpoint = "http://localhost:4317"

[[pollers]]
name = "virtual_machine_count"
api_query = "api/v1/virtualization/VirtualMachines?$count=true"
aggregator = "result_count"
interval = 60
otel_attributes = { testkey1 = "testvalue1", testkey2 = "testvalue2" }

[[tspollers]]
name = "hx_performance"
datasource = "hx"
dimensions = ["deviceId"]
filter = { type = "and", fields = [{type = "selector", dimension = "node", value = "allhosts"},{type = "selector", dimension = "datastore", value = "cluster"}]}
aggregations = [{name = "read_ops_per_min", type = "longSum", fieldName = "sumReadOps"}, {name = "write_ops_per_min", type = "longSum",fieldName = "sumWriteOps"}, {name = "read_tp_bytes_per_min", type = "longSum", fieldName = "sumReadBytes"},{name = "write_tp_bytes_per_min", type = "longSum", fieldName = "sumWriteBytes"},{name = "sum_read_latency",type = "longSum", fieldName = "sumReadLatency"},{name = "sum_write_latency",type = "longSum", fieldName = "sumWriteLatency"}]
post_aggregations = [{type = "arithmetic",name = "read_ops",fn = "/",fields = [{type = "fieldAccess",name = "read_ops_per_min",fieldName = "read_ops_per_min"},{type = "constant",name = "const",value = 300}]}, {type = "arithmetic",name = "write_ops",fn = "/",fields = [{type = "fieldAccess",name = "write_ops_per_min",fieldName = "write_ops_per_min"},{type = "constant",name = "const",value = 300}]},{type = "arithmetic", name = "read_tp", fn = "/", fields = [{type = "fieldAccess", name = "read_tp_bytes_per_min", fieldName = "read_tp_bytes_per_min"},{type = "constant", name = "const", value = 300}]},{type = "arithmetic", name = "write_tp", fn = "/", fields = [{type = "fieldAccess", name = "write_tp_bytes_per_min", fieldName = "write_tp_bytes_per_min"},{type = "constant", name = "const", value = 300}]},{type = "arithmetic", name = "readLatency", fn = "/", fields = [{type = "fieldAccess", name = "sum_read_latency", fieldName = "sum_read_latency"},{type = "fieldAccess",name = "read_ops_per_min", fieldName = "read_ops_per_min"}]},{type = "arithmetic", name = "writeLatency", fn = "/", fields = [{type = "fieldAccess", name = "sum_write_latency",fieldName = "sum_write_latency"},{type = "fieldAccess", name = "write_ops_per_min", fieldName = "write_ops_per_min"}]}]
field_names = ["read_ops", "write_ops", "read_ops_per_min", "write_ops_per_min", "read_tp_bytes_per_min", "write_tp_bytes_per_min", "read_tp", "write_tp", "readLatency", "writeLatency", "sum_read_latency", "sum_write_latency"]
otel_dimension_to_attribute_map = { deviceId = "device.id" }
otel_attributes = { testkey1 = "testvalue1"}
interval = 60
# 
# [[pollers]]
# name = "ntp_policy_count"
# api_query = "api/v1/ntp/Policies?$count=true"
# aggregator = "result_count"
# interval = 60

# [[pollers]]
# name = "hx_usage"
# api_query = "api/v1/telemetry/GroupBys"
# api_body = '''
#   {
#     "queryType": "groupBy",
#     "dataSource": "hx",
#     "dimensions": ["clusterName"],
#     "intervals": [ "2022-09-06T00:00:00.000/2022-09-10T00:00:00.000" ],
#     "granularity": "all",
#     "aggregations": [{"type": "longLast", "name": "usedStorageBytes", "fieldName": "sumUsedStorageBytes"}]
#   }
# '''
# api_method = "post"
# aggregator = "result_count"

# [[tspollers]]
# name = "hx_usage"
# datasource = "hx"
# dimensions = ["clusterName", "datastore"]
# field_names = ["sumWriteBytes"]
# interval = 60

# [[tspollers]]
# name = "hx_performance"
# datasource = "hx"
# dimensions = ["deviceId"]
# filter = { type = "and", fields = [{type = "selector", dimension = "node", value = "allhosts"},{type = "selector", dimension = "datastore", value = "cluster"}]}
# aggregations = [{name = "read_ops_per_min", type = "longSum", fieldName = "sumReadOps"}, {name = "write_ops_per_min", type = "longSum",fieldName = "sumWriteOps"}, {name = "read_tp_bytes_per_min", type = "longSum", fieldName = "sumReadBytes"},{name = "write_tp_bytes_per_min", type = "longSum", fieldName = "sumWriteBytes"},{name = "sum_read_latency",type = "longSum", fieldName = "sumReadLatency"},{name = "sum_write_latency",type = "longSum", fieldName = "sumWriteLatency"}]
# post_aggregations = [{type = "arithmetic",name = "read_ops",fn = "/",fields = [{type = "fieldAccess",name = "read_ops_per_min",fieldName = "read_ops_per_min"},{type = "constant",name = "const",value = 300}]}, {type = "arithmetic",name = "write_ops",fn = "/",fields = [{type = "fieldAccess",name = "write_ops_per_min",fieldName = "write_ops_per_min"},{type = "constant",name = "const",value = 300}]},{type = "arithmetic", name = "read_tp", fn = "/", fields = [{type = "fieldAccess", name = "read_tp_bytes_per_min", fieldName = "read_tp_bytes_per_min"},{type = "constant", name = "const", value = 300}]},{type = "arithmetic", name = "write_tp", fn = "/", fields = [{type = "fieldAccess", name = "write_tp_bytes_per_min", fieldName = "write_tp_bytes_per_min"},{type = "constant", name = "const", value = 300}]},{type = "arithmetic", name = "readLatency", fn = "/", fields = [{type = "fieldAccess", name = "sum_read_latency", fieldName = "sum_read_latency"},{type = "fieldAccess",name = "read_ops_per_min", fieldName = "read_ops_per_min"}]},{type = "arithmetic", name = "writeLatency", fn = "/", fields = [{type = "fieldAccess", name = "sum_write_latency",fieldName = "sum_write_latency"},{type = "fieldAccess", name = "write_ops_per_min", fieldName = "write_ops_per_min"}]}]
# field_names = ["read_ops", "write_ops", "read_ops_per_min", "write_ops_per_min", "read_tp_bytes_per_min", "write_tp_bytes_per_min", "read_tp", "write_tp"]
# interval = 300
# # poller_type = "sum"

# [[tspollers]]
# name = "hx_performance_tp"
# datasource = "hx"
# dimensions = ["deviceId"]
# filter = { type = "and", fields = [{type = "selector", dimension = "node", value = "allhosts"},{type = "selector", dimension = "datastore", value = "cluster"}]}
# aggregations = [{name = "read_tp_bytes_per_min", type = "longSum", fieldName = "sumReadBytes"},{name = "write_tp_bytes_per_min", type = "longSum", fieldName = "sumWriteBytes"}]
# post_aggregations = [{type = "arithmetic",name = "read_ops",fn = "/",fields = [{type = "fieldAccess",name = "read_ops_per_min",fieldName = "read_ops_per_min"},{type = "constant",name = "const",value = 300}]}, {type = "arithmetic",name = "write_ops",fn = "/",fields = [{type = "fieldAccess",name = "write_ops_per_min",fieldName = "write_ops_per_min"},{type = "constant",name = "const",value = 300}]}]
# field_names = ["read_ops", "write_ops", "read_ops_per_min", "write_ops_per_min"]
# interval = 300
# # poller_type = "sum"

# [[pollers]]
# name = "security_advisories_affected_objects"
# api_query = "api/v1/tam/AdvisoryInstances?$count=true&$filter=Advisory/ObjectType eq 'tam.SecurityAdvisory'"
# aggregator = "result_count"
# interval = 60
# 
# [[pollers]]
# name = "nonsecurity_advisories_affected_objects"
# api_query = "api/v1/tam/AdvisoryInstances?$count=true&$filter=Advisory/ObjectType ne 'tam.SecurityAdvisory'"
# aggregator = "result_count"
# interval = 60
# 
# [[pollers]]
# name = "security_advisories"
# api_query = "api/v1/tam/AdvisoryInstances?$filter=Advisory/ObjectType eq 'tam.SecurityAdvisory'&$apply=groupby((Advisory), aggregate($count as count))"
# aggregator = "count_results"
# interval = 60
# 
# [[pollers]]
# name = "alarms_critical"
# api_query = "api/v1/cond/Alarms?$filter=Acknowledge eq 'None' and Severity eq 'Critical'&$count=true"
# aggregator = "result_count"
# interval = 60
# 
# [[pollers]]
# name = "alarms_warning"
# api_query = "api/v1/cond/Alarms?$filter=Acknowledge eq 'None' and Severity eq 'Warning'&$count=true"
# aggregator = "result_count"
# interval = 60
